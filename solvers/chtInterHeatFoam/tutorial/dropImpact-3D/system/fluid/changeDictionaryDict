/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dictionaryReplacement
{
    U
    {internalField   uniform (0 0 0);

boundaryField
{
    up
    {
        type            zeroGradient;
    }
    walls
    {
        type            symmetry;
    }
    frontAndBack
    {
        type            symmetry;
    }
    fluid_to_solid
    {
        type            fixedValue;
        value           uniform ( 0 0 0 );
    }
}
    }

    T
    {
      internalField   uniform 500;

    boundaryField{
    up
    {
        type            zeroGradient;
    }
    walls
    {
        type            symmetry;
    }
    frontAndBack
    {
        type            symmetry;
    }
    fluid_to_solid
    {
       type                solidWallMixedTemperatureCoupled;
       neighbourFieldName  T;
       K                   K;
       value               uniform 500;
	
    }
}

    }

    alpha.water
    {
       internalField   uniform 1.0;

boundaryField
{
     up
    {
        type            zeroGradient;
    }
    walls
    {
        type            symmetry;
    }
    frontAndBack
    {
        type            symmetry;
    }
    fluid_to_solid
    {
         type            zeroGradient;		
    }
   }

    }

    p_rgh
    {
       
internalField   uniform 0;

boundaryField
{
   up
    {
        type            fixedValue;
        value           uniform 0;
    }
    walls
    {
        type            symmetry;
    }
    frontAndBack
    {
        type            symmetry;
    }
    fluid_to_solid
    {
         type            zeroGradient;
        gradient        uniform 0;
        value           uniform 0;
    }
    
}
    }
}

// ************************************************************************* //
