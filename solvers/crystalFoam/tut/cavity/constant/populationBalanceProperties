/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      populationaBalanceProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

populationBalanceModel univariatePopulationBalance;

univariatePopulationBalanceCoeffs
{
    aggregation off;
    
    aggregationKernel
    {
        aggregationKernel turbulentBrownian;
    /*
	6
(
Brownian
constant
differentialForce
hydrodynamic
sum
turbulentBrownian
)
    */
    }
    
    breakup off;
    
    breakupKernel
    {
        breakupKernel LuoSvendsen;
        
        Cb        Cb        [ 0 0 0 0 0 0 0 ] 1.0e-3;
        epsilonExp          0.75;
        nuExp              -1.25;
        sizeExp             1.0;
/*
5
(
AyaziShamlou
LuoSvendsen
constant
exponential
powerLaw
)
*/
    }
    
    daughterDistribution
    {
        daughterDistribution symmetricFragmentation;
	/*
	4
(
erosion
oneQuarterMassRatio
symmetricFragmentation
uniform
)
	*/
    }
    
    diffusionModel
    {
        diffusionModel  turbulentDiffusion;
        gammaLam        gammaLam    [ 0 2 -1 0 0 0 0 ] 0.0001;
        Sc              0.7;
	/*
	3
(
molecularDiffusion
none
turbulentDiffusion
)

	*/
    }
    	
    growth on;

    growthModel
    {
        growthModel  sumSD;//diffusion;//constant;//BS;//BCF//PN;
	kd	kd           [0 1 -1 0 0 0 0 ] 1.0; //mass transfer coeffiecient for diffusion growth
        Cg        Cg        [0 3 -1 0 0 0 0 ] 1.0; //for constant growth
    }

    nucleation  on;

    nucleationModel
   {
    	nucleationModel homogeneous;//noNucleation;//;//sumHI;//
	f     0.1; // 0<f<1.0
	het   1E-11;//???
	K     0.32; //  0.310 <K<0.410
	nus   1.0;//
   }

}


// ************************************************************************* //
